plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    // for publishing
    id("com.vanniktech.maven.publish")

}

android {
    namespace 'com.silencio.peaq'
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    api 'androidx.core:core-ktx:1.12.0'
    api 'androidx.appcompat:appcompat:1.6.1'

    implementation 'com.google.android.material:material:1.11.0'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    api project(':encrypting-kotlin-main')
    api project(':lib')

    //for ss58
    api 'dev.sublab:hashing-kotlin:1.0.0'
    api 'dev.sublab:common-kotlin:1.0.0'

    //RPC Call
    api 'io.github.nova-wallet:substrate-sdk-android:2.1.3'
    api 'com.neovisionaries:nv-websocket-client:2.14'
    api 'com.google.code.gson:gson:2.10.1'

    //for protobuf in didDocument Create
    api 'com.google.protobuf:protobuf-java:3.21.7'
    api 'com.google.protobuf:protobuf-kotlin:3.21.7'

}

import com.vanniktech.maven.publish.AndroidSingleVariantLibrary // Assuming this import exists

mavenPublishing {
    // Configure WHAT artifact to publish (e.g., release variant of Android library)
    // This part likely remains the same as you want to publish the same content.
    configure(new AndroidSingleVariantLibrary("release", true, true))

    // 1. REMOVE or COMMENT OUT publishing to Maven Central:
    // We are publishing locally, not to the central repository.
    // publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL, true) // << COMMENTED OUT / REMOVED

    // 2. REMOVE or COMMENT OUT signing:
    // Signing is typically required for Central repositories, but not needed for the local repo.
    // It might also cause build failures locally if signing keys aren't configured.
    // signAllPublications()

    // 3. MODIFY coordinates: Use a unique version for your local build!
    coordinates("store.silencio", "peaqsdk", "1.0.11-LOCAL_v3")

    // 4. KEEP POM configuration: Metadata is still useful locally.
    // The POM details will be published alongside the JAR to ~/.m2/repository
    // You might want to slightly adjust the name or description for clarity.
    pom {
        name = "Silencio Peaq (Local Build with fix)"
        description = "Locally modified build of Silencio Peaq SDK to fix (DivByZero)."
        inceptionYear = "2025"
        url = "https://github.com/Silencio-network/silencio-peaq-sdk-android/"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "SilencioNetwork"
                name = "SilencioNetwork"
                url = "https://github.com/Silencio-network"
            }
        }
        scm {
            url = "https://github.com/Silencio-network/silencio-peaq-sdk-android/"
            connection = "scm:git:git://github.com/Silencio-network/silencio-peaq-sdk-android.git"
            developerConnection = "scm:git:ssh://git@github.com:Silencio-network/silencio-peaq-sdk-android.git"
        }
    }

    // 5. NOTE on executing the publish:
    // To publish this configuration to your local ~/.m2/repository, run the
    // following command in your terminal in this module's directory:
    //
    // ./gradlew :peaq:publishToMavenLocal
    //
    // (or add 'clean' for a fresh build: ./gradlew clean :peaq:publishToMavenLocal)
}
