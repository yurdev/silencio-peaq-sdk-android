/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // thi is for publishing
    id("com.vanniktech.maven.publish")
}

//repositories {
//    // Use Maven Central for resolving dependencies.
//    mavenCentral()
//}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
//    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
//    implementation libs.guava
    implementation 'com.google.protobuf:protobuf-java:3.21.7'
    implementation 'com.google.protobuf:protobuf-kotlin:3.21.7'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.1')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// import for publishing
import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar
import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

mavenPublishing {
//    configure(KotlinJvm(
//            // configures the -javadoc artifact, possible values:
//            // - `JavadocJar.None()` don't publish this artifact
//            // - `JavadocJar.Empty()` publish an emprt jar
//            // - `JavadocJar.Dokka("dokkaHtml")` when using Kotlin with Dokka, where `dokkaHtml` is the name of the Dokka task that should be used as input
////        javadocJar = JavadocJar.Dokka("dokkaHtml"),
//            // whether to publish a sources jar
////            sourcesJar = true,
//    ))
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL,true)


    signAllPublications()

    coordinates("store.silencio", "lib", "1.0.13")

    pom {


        name = "Silencio lib"
        description = "Silencio lib"
        inceptionYear = "2024"
        url = "https://github.com/Silencio-network/silencio-peaq-sdk-android/"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "SilencioNetwork"
                name = "SilencioNetwork"
                url = "https://github.com/Silencio-network"
            }
        }
        scm {
            url = "https://github.com/Silencio-network/silencio-peaq-sdk-android/"
            connection = "scm:git:git://github.com/Silencio-network/silencio-peaq-sdk-android.git"
            developerConnection = "scm:git:ssh://git@github.com:Silencio-network/silencio-peaq-sdk-android.git"
        }

    }
}